/**
 * ComonlWeb
 * API per ComonlWeb
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
import { HttpHeaders }                                       from '@angular/common/http';

import { Observable }                                        from 'rxjs';

import { ApiError } from '../model/apiError';
import { Comunicazione } from '../model/comunicazione';
import { Lavoratore } from '../model/lavoratore';
import { WrapperComunicazione } from '../model/wrapperComunicazione';


import { Configuration }                                     from '../configuration';


export interface ComunicazioneControlliServiceInterface {
    defaultHeaders: HttpHeaders;
    configuration: Configuration;
    

    /**
    * Comunicazione
    * 
    * @param body 
    */
    checkDatiEssenziali(body?: WrapperComunicazione, extraHttpRequestParams?: any): Observable<boolean>;

    /**
    * Controlla la sezione azienda utilizzatrice
    * 
    * @param body 
    */
    chkAziendaUtilizzatrice(body?: WrapperComunicazione, extraHttpRequestParams?: any): Observable<Comunicazione>;

    /**
    * Controlla la sezione dei dati del datorePrecedente di una comunicazione di vardatori trasefrimento
    * 
    * @param body 
    */
    chkDatiAziendaPrecedente(body?: Comunicazione, extraHttpRequestParams?: any): Observable<Comunicazione>;

    /**
    * Controlla la sezione dei dati generali
    * 
    * @param body 
    */
    chkDatiGenerali(body?: WrapperComunicazione, extraHttpRequestParams?: any): Observable<Comunicazione>;

    /**
    * Controlla la sezione dei dati generali
    * 
    * @param body 
    */
    chkDatiGeneraliVardatori(body?: WrapperComunicazione, extraHttpRequestParams?: any): Observable<Comunicazione>;

    /**
    * Controlla la sezione dei dati anagrafici impresa
    * 
    * @param body 
    */
    chkImpresa(body?: WrapperComunicazione, extraHttpRequestParams?: any): Observable<Comunicazione>;

    /**
    * Controlla la sezione dei dati anagrafici del lavoratore
    * 
    * @param body 
    */
    chkLavoratore(body?: Lavoratore, extraHttpRequestParams?: any): Observable<Lavoratore>;

    /**
    * Controlla la sezione dei dati anagrafici dei lavoratori associati alla comunicazione
    * 
    * @param body 
    */
    chkLavoratoriComunicazione(body?: WrapperComunicazione, extraHttpRequestParams?: any): Observable<Comunicazione>;

    /**
    * Controlla la sezione dei dati del rapporto di lavoro
    * 
    * @param body 
    */
    chkRapporto(body?: Comunicazione, extraHttpRequestParams?: any): Observable<Comunicazione>;

    /**
    * Comunicazione
    * 
    * @param id 
    */
    chkRiepilogo(id: number, extraHttpRequestParams?: any): Observable<Array<ApiError>>;

    /**
    * Controlla la tripletta rapportoVd, lavoratoreVd, sedeLavoroVd di una comunicazione di vardatori trasferimento
    * 
    * @param body 
    */
    chkSediLavoro(body?: Comunicazione, extraHttpRequestParams?: any): Observable<Comunicazione>;

    /**
    * Controlla la sezione dei dati del tutore
    * 
    * @param body 
    */
    chkTutore(body?: Comunicazione, extraHttpRequestParams?: any): Observable<Comunicazione>;

}
