/**
 * ComonlWeb
 * API per ComonlWeb
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
import { HttpHeaders }                                       from '@angular/common/http';

import { Observable }                                        from 'rxjs';

import { ApiError } from '../model/apiError';
import { CaricaPersonaPv } from '../model/caricaPersonaPv';
import { CategLavAssObbl } from '../model/categLavAssObbl';
import { CategTirocinante } from '../model/categTirocinante';
import { Cessazionerl } from '../model/cessazionerl';
import { Cittadinanza } from '../model/cittadinanza';
import { Cpi } from '../model/cpi';
import { DecodificaGenerica } from '../model/decodificaGenerica';
import { EntePrevidenziale } from '../model/entePrevidenziale';
import { GradoContrattuale } from '../model/gradoContrattuale';
import { LivelloStudio } from '../model/livelloStudio';
import { MotivoPermesso } from '../model/motivoPermesso';
import { NaturaGiuridica } from '../model/naturaGiuridica';
import { Personalizzazione } from '../model/personalizzazione';
import { Provincia } from '../model/provincia';
import { Questura } from '../model/questura';
import { StatiEsteri } from '../model/statiEsteri';
import { StatoComunicazione } from '../model/statoComunicazione';
import { StatoDelega } from '../model/statoDelega';
import { StatusStraniero } from '../model/statusStraniero';
import { TipoAttoL68 } from '../model/tipoAttoL68';
import { TipoComunicazione } from '../model/tipoComunicazione';
import { TipoComunicazioneTu } from '../model/tipoComunicazioneTu';
import { TipoContratti } from '../model/tipoContratti';
import { TipoEntePromTirocinio } from '../model/tipoEntePromTirocinio';
import { TipoOrario } from '../model/tipoOrario';
import { TipoSoggettoAbilitato } from '../model/tipoSoggettoAbilitato';
import { TipoTrasferimento } from '../model/tipoTrasferimento';
import { TipologiaTirocinio } from '../model/tipologiaTirocinio';
import { Toponimo } from '../model/toponimo';
import { Trasformazionerl } from '../model/trasformazionerl';
import { VariazioneSomm } from '../model/variazioneSomm';


import { Configuration }                                     from '../configuration';


export interface DecodificaServiceInterface {
    defaultHeaders: HttpHeaders;
    configuration: Configuration;
    

    /**
    * Ricerca CaricaPersonaPv
    * 
    */
    getCaricaPersonaPv(extraHttpRequestParams?: any): Observable<Array<CaricaPersonaPv>>;

    /**
    * Ricerca CategLavoratore
    * 
    */
    getCategLavoratoreAssObbl(extraHttpRequestParams?: any): Observable<Array<CategLavAssObbl>>;

    /**
    * Ricerca CategTirocinante
    * 
    */
    getCategTirocinante(extraHttpRequestParams?: any): Observable<Array<CategTirocinante>>;

    /**
    * Ricerca Cessazionerl
    * 
    */
    getCessazionerl(extraHttpRequestParams?: any): Observable<Array<Cessazionerl>>;

    /**
    * Ricerca Cittadinanza
    * 
    */
    getCittadinanza(extraHttpRequestParams?: any): Observable<Array<Cittadinanza>>;

    /**
    * Ricerca CategTirocinante
    * 
    */
    getCpiEntePromTirocinio(extraHttpRequestParams?: any): Observable<Array<Cpi>>;

    /**
    * Ricerca CategTirocinante
    * 
    */
    getEntePrevidenziale(extraHttpRequestParams?: any): Observable<Array<EntePrevidenziale>>;

    /**
    * Ricerca GradoContrattuale
    * 
    */
    getGradoContrattuale(extraHttpRequestParams?: any): Observable<Array<GradoContrattuale>>;

    /**
    * Ricerca LivelloStudio
    * 
    */
    getLivelloStudio(extraHttpRequestParams?: any): Observable<Array<LivelloStudio>>;

    /**
    * Ricerca MotivoPermesso
    * 
    */
    getMotivoPermesso(extraHttpRequestParams?: any): Observable<Array<MotivoPermesso>>;

    /**
    * Ricerca NaturaGiuridica
    * 
    */
    getNaturaGiuridica(extraHttpRequestParams?: any): Observable<Array<NaturaGiuridica>>;

    /**
    * Ricerca persnalizzazine by pv
    * 
    * @param pv 
    */
    getPersonalizzazioneByPv(pv: string, extraHttpRequestParams?: any): Observable<Personalizzazione>;

    /**
    * Ricerca province
    * 
    * @param codRegioneMin 
    */
    getProvincia(codRegioneMin: string, extraHttpRequestParams?: any): Observable<Array<Provincia>>;

    /**
    * Ricerca Questura
    * 
    */
    getQuestura(extraHttpRequestParams?: any): Observable<Array<Questura>>;

    /**
    * Ricerca StatoComunicazione
    * 
    * @param flgRicerca 
    */
    getStatoComunicazione(flgRicerca: boolean, extraHttpRequestParams?: any): Observable<Array<StatoComunicazione>>;

    /**
    * Ricerca StatoDelega
    * 
    */
    getStatoDelega(extraHttpRequestParams?: any): Observable<Array<StatoDelega>>;

    /**
    * Ricerca StatoEsteroCf
    * 
    */
    getStatoEsteroCf(extraHttpRequestParams?: any): Observable<Array<StatiEsteri>>;

    /**
    * Ricerca TipoAttoL68
    * 
    */
    getTipoAttoL68(extraHttpRequestParams?: any): Observable<Array<TipoAttoL68>>;

    /**
    * Ricerca TipoComunicazione
    * 
    */
    getTipoComunicazione(extraHttpRequestParams?: any): Observable<Array<TipoComunicazione>>;

    /**
    * Ricerca TipoComunicazioneTu
    * 
    * @param flgRicerca 
    */
    getTipoComunicazioneTu(flgRicerca: boolean, extraHttpRequestParams?: any): Observable<Array<TipoComunicazioneTu>>;

    /**
    * Ricerca TipoContratto
    * 
    * @param tipoTracciato 
    * @param tipoComunicazione 
    */
    getTipoContrattiByTracciatoAndTipoComunicazione(tipoTracciato: string, tipoComunicazione: string, extraHttpRequestParams?: any): Observable<Array<TipoContratti>>;

    /**
    * Ricerca TipoContratto
    * 
    */
    getTipoContratto(extraHttpRequestParams?: any): Observable<Array<TipoContratti>>;

    /**
    * Ricerca TipoEntePromTirocinio
    * 
    */
    getTipoEntePromTirocinio(extraHttpRequestParams?: any): Observable<Array<TipoEntePromTirocinio>>;

    /**
    * Ricerca TipoOrario
    * 
    */
    getTipoOrario(extraHttpRequestParams?: any): Observable<Array<TipoOrario>>;

    /**
    * Ricerca TipoSoggettoAbilitato
    * 
    */
    getTipoSoggettoAbilitato(extraHttpRequestParams?: any): Observable<Array<TipoSoggettoAbilitato>>;

    /**
    * Ricerca TipoSoggettoAbilitato
    * 
    */
    getTipoStudioProfessionale(extraHttpRequestParams?: any): Observable<Array<TipoSoggettoAbilitato>>;

    /**
    * Ricerca TipoVariazione
    * 
    */
    getTipoTrasferimento(extraHttpRequestParams?: any): Observable<Array<TipoTrasferimento>>;

    /**
    * Ricerca TipologiaTirocinio
    * 
    */
    getTipologiaTirocinio(extraHttpRequestParams?: any): Observable<Array<TipologiaTirocinio>>;

    /**
    * Ricerca TitoloSoggiorno
    * 
    */
    getTitoloSoggiorno(extraHttpRequestParams?: any): Observable<Array<StatusStraniero>>;

    /**
    * Ricerca Toponimo
    * 
    */
    getToponimo(extraHttpRequestParams?: any): Observable<Array<Toponimo>>;

    /**
    * Ricerca Trasformazionerl
    * 
    * @param tipo 
    */
    getTrasformazionerlByTipo(tipo: string, extraHttpRequestParams?: any): Observable<Array<Trasformazionerl>>;

    /**
    * Ricerca VariazioneSomm
    * 
    * @param idTipoSomm 
    * @param idTipoComunicazione 
    */
    getVariazioneSommByTipoSommAndTipoCom(idTipoSomm: number, idTipoComunicazione: string, extraHttpRequestParams?: any): Observable<VariazioneSomm>;

    /**
    * Ricerca ateco
    * 
    * @param body 
    */
    postAtecofinDecodifica(body?: DecodificaGenerica, extraHttpRequestParams?: any): Observable<Array<DecodificaGenerica>>;

    /**
    * Ricerca ccnl
    * 
    * @param body 
    */
    postCcnlDecodifica(body?: DecodificaGenerica, extraHttpRequestParams?: any): Observable<Array<DecodificaGenerica>>;

    /**
    * Ricerca comune
    * 
    * @param body 
    */
    postComuneDecodifica(body?: DecodificaGenerica, extraHttpRequestParams?: any): Observable<Array<DecodificaGenerica>>;

    /**
    * Ricerca inquadramento
    * 
    * @param body 
    */
    postLivelloRetribuzioneDecodifica(body?: DecodificaGenerica, extraHttpRequestParams?: any): Observable<Array<DecodificaGenerica>>;

    /**
    * Ricerca qualifica istat
    * 
    * @param body 
    */
    postQualificaDecodifica(body?: DecodificaGenerica, extraHttpRequestParams?: any): Observable<Array<DecodificaGenerica>>;

    /**
    * Ricerca stato estero
    * 
    * @param body 
    */
    postStatiEsteriDecodifica(body?: DecodificaGenerica, extraHttpRequestParams?: any): Observable<Array<DecodificaGenerica>>;

    /**
    * Ricerca Tipoi di comunicazione per tracciato UNILAV
    * 
    * @param body 
    */
    postTipoComunicazioneUnilavDecodifica(body?: DecodificaGenerica, extraHttpRequestParams?: any): Observable<Array<DecodificaGenerica>>;

    /**
    * Ricerca Tipoi di comunicazione per tracciato UNISOMM
    * 
    * @param body 
    */
    postTipoComunicazioneUnisommDecodifica(body?: DecodificaGenerica, extraHttpRequestParams?: any): Observable<Array<DecodificaGenerica>>;

}
