<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>it.csi.comonl</groupId>
		<artifactId>comonlweb</artifactId>
		<version>${revision}</version>
	</parent>

	<artifactId>comonlweb-ejb</artifactId>
	<packaging>ejb</packaging>
	<name>COMONL BackEnd - EJB submodule</name>
	
	<properties>
		<openhtml.version>1.0.9</openhtml.version>
		<dependencies.version.jexcelapi>2.6.12</dependencies.version.jexcelapi>
	</properties>

	<dependencies>
		<dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>comonlweb-lib</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>comonlweb-integ</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>comonlweb-integ-silp</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>comonlweb-integ-spicom</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>javax</groupId>
			<artifactId>javaee-api</artifactId>
			<version>${dependencies.version.jee}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>javax.cache</groupId>
			<artifactId>cache-api</artifactId>
			<version>${dependencies.version.javax-cache-api}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-api</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-to-slf4j</artifactId>
		</dependency>
		<dependency>
			<groupId>javax.xml.bind</groupId>
			<artifactId>jaxb-api</artifactId>
			<version>${dependencies.version.jaxb-api}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-text</artifactId>
			<version>${dependencies.version.commons-text}</version>
		</dependency>
		
		<!-- 
		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
		</dependency>
		 -->
		 
		<dependency>
			<groupId>org.mapstruct</groupId>
			<artifactId>mapstruct</artifactId>
			<version>${dependencies.version.mapstruct}</version>
		</dependency>
		
		
		<dependency>
			<groupId>org.apache.httpcomponents</groupId>
			<artifactId>httpclient</artifactId>
			<version>4.3.6</version>
		</dependency>
	
		
		<dependency>
			<groupId>commons-lang</groupId>
			<artifactId>commons-lang</artifactId>
			<version>${dependencies.version.commons-lang}</version>
		</dependency>
		
		

		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.13.2</version>
			<scope>test</scope>
		</dependency>
		
		<dependency>
			<groupId>org.jboss.arquillian.junit</groupId>
			<artifactId>arquillian-junit-container</artifactId>
			<version>1.4.0.Final</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.jboss.arquillian.protocol</groupId>
			<artifactId>arquillian-protocol-servlet</artifactId>
			<version>1.4.0.Final</version>
			<scope>test</scope>
		</dependency>

		
		
		<!-- <dependency>
			<groupId>org.postgresql</groupId>
			<artifactId>postgresql</artifactId>
			<version>${dependencies.version.postgresql}</version>
			<scope>test</scope>
		</dependency> -->
		
		
		<dependency>
			<groupId>org.jboss.shrinkwrap.resolver</groupId>
			<artifactId>shrinkwrap-resolver-bom</artifactId>
			<version>${dependencies.version.shrinkwrap-resolver-bom}</version>
			<scope>test</scope>
			<type>pom</type>
		</dependency>
		

		<dependency>
			<groupId>org.jboss.shrinkwrap.resolver</groupId>
			<artifactId>shrinkwrap-resolver-impl-maven</artifactId>
			<version>2.2.6</version>
			<scope>test</scope>
		</dependency>
		
		<dependency>
			<groupId>org.jboss.shrinkwrap.resolver</groupId>
			<artifactId>shrinkwrap-resolver-impl-maven-archive</artifactId>
			<version>2.2.6</version>
			<scope>test</scope>
		</dependency>		

		 
		 
		<dependency>
			<groupId>com.squareup.okhttp</groupId>
			<artifactId>okhttp</artifactId>
			<version>${dependencies.version.okhttp}</version>
		</dependency>
		<dependency>
			<groupId>com.squareup.okhttp</groupId>
			<artifactId>logging-interceptor</artifactId>
			<version>${dependencies.version.okhttp}</version>
		</dependency>
		<dependency>
			<groupId>com.google.code.gson</groupId>
			<artifactId>gson</artifactId>
			<version>${dependencies.version.gson}</version>
		</dependency>
		<dependency>
			<groupId>io.gsonfire</groupId>
			<artifactId>gson-fire</artifactId>
			<version>${dependencies.version.gson-fire}</version>
		</dependency>
		
		
		<dependency>
			<groupId>org.threeten</groupId>
			<artifactId>threetenbp</artifactId>
			<version>${dependencies.version.threetenbp}</version>
		</dependency>
		<dependency>
			<groupId>joda-time</groupId>
			<artifactId>joda-time</artifactId>
			<version>${dependencies.version.joda-time}</version>
		</dependency>

		<dependency>
			<groupId>org.apache.poi</groupId>
			<artifactId>poi</artifactId>
			<version>${dependencies.version.apache.poi}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.poi</groupId>
			<artifactId>poi-ooxml</artifactId>
			<version>${dependencies.version.apache.poi}</version>
		</dependency>

		<!-- per Identita -->
		<dependency>
			<groupId>it.csi.iridev2</groupId>
			<artifactId>iridev2-pep-intf</artifactId>
		</dependency>
		<dependency>
	      <groupId>it.csi.csi</groupId>
	      <artifactId>csi-stadapter</artifactId>
	    </dependency>
		
		<dependency>
			<groupId>it.csi.spicom</groupId>
			<artifactId>spicom-client</artifactId>
		</dependency>
	
		<dependency>
	    	<groupId>net.sourceforge.jexcelapi</groupId>
	    	<artifactId>jxl</artifactId>
	    	<version>${dependencies.version.jexcelapi}</version>
		</dependency>
	
		<dependency>
			<groupId>commons-beanutils</groupId>
			<artifactId>commons-beanutils</artifactId>
			<version>1.9.4</version>
		</dependency>
		
		
		  <!-- apache poi / microsoft office -->
		<dependency>
			<groupId>org.apache.poi</groupId>
			<artifactId>poi</artifactId>
			<version>5.0.0</version>
		</dependency>
		<dependency>
			<groupId>org.apache.poi</groupId>
			<artifactId>poi-ooxml</artifactId>
			<version>5.0.0</version>
		</dependency>

		
		<!-- swagger -->
	    <dependency>
	      <groupId>io.swagger</groupId>
	      <artifactId>swagger-annotations</artifactId>
	    </dependency>
	   	    <dependency>
	      <groupId>io.swagger</groupId>
	      <artifactId>swagger-jaxrs</artifactId>
	    </dependency>

		
		
	    
	    <!-- html to pdf -->
	    	<!--  PDF  --> 
		<dependency>
			<groupId>com.openhtmltopdf</groupId>
			<artifactId>openhtmltopdf-core</artifactId>
			<version>${openhtml.version}</version>
		</dependency>
		<dependency>
			<groupId>com.openhtmltopdf</groupId>
			<artifactId>openhtmltopdf-pdfbox</artifactId>
			<version>${openhtml.version}</version>
		</dependency>
		<dependency>
			<groupId>com.openhtmltopdf</groupId>
			<artifactId>openhtmltopdf-java2d</artifactId>
			<version>${openhtml.version}</version>
		</dependency>
		<dependency>
			<groupId>com.openhtmltopdf</groupId>
			<artifactId>openhtmltopdf-rtl-support</artifactId>
			<version>${openhtml.version}</version>
		</dependency>
		<dependency>
			<groupId>com.openhtmltopdf</groupId>
			<artifactId>openhtmltopdf-slf4j</artifactId>
			<version>${openhtml.version}</version>
		</dependency>
		<dependency>
			<groupId>com.openhtmltopdf</groupId>
			<artifactId>openhtmltopdf-svg-support</artifactId>
			<version>${openhtml.version}</version>
		</dependency>
		<dependency>
			<groupId>com.openhtmltopdf</groupId>
			<artifactId>openhtmltopdf-mathml-support</artifactId>
			<version>${openhtml.version}</version>
		</dependency>

	</dependencies>



	<build>
		<finalName>${project.artifactId}</finalName>
		<filters>
			<filter>../profiles/${build.profile.id}.properties</filter>
		</filters>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
			</resource>
		</resources>
		<plugins>
			<plugin>
				<artifactId>maven-ejb-plugin</artifactId>
				<version>${plugin.version.ejb}</version>
				<configuration>
					<!-- Tell Maven we are using EJB 3.2 -->
					<ejbVersion>3.2</ejbVersion>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>${plugin.version.compiler}</version>
				<configuration>
					<debug>true</debug>
					<debuglevel>lines,vars,source</debuglevel>
					<!-- If linting is requested -->
					<!--compilerArgument>-Xlint:unchecked</compilerArgument -->
					<annotationProcessorPaths>
						<path>
							<groupId>org.mapstruct</groupId>
							<artifactId>mapstruct-processor</artifactId>
							<version>${dependencies.version.mapstruct}</version>
						</path>
					</annotationProcessorPaths>
				</configuration>
			</plugin>

		</plugins>
	</build>

	<profiles>
		<profile>
			<!-- The default profile skips all tests, though you can tune it to run 
				just unit tests based on a custom pattern. Separate profiles are provided 
				for running all tests, including Arquillian tests that execute in the specified 
				container -->
			<id>default</id>
			<activation>
				<property>
					<name>!default</name>
				</property>
			</activation>
			<build>
				<plugins>
					<plugin>
						<artifactId>maven-surefire-plugin</artifactId>
						<version>${plugin.version.surefire}</version>
						<configuration>
							<skip>true</skip>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>

		<profile>
			<!-- An optional Arquillian testing profile that executes tests in your 
				JBoss EAP instance. This profile will start a new JBoss EAP instance, and 
				execute the test, shutting it down when done. Run with: mvn clean test -Parq-jbossas-managed -->
			<id>arq-jbossas-managed</id>
			<build>
				<plugins>
					<plugin>
						<artifactId>maven-surefire-plugin</artifactId>
						<version>${plugin.version.surefire}</version>
						<configuration>
							<skip>false</skip>
						</configuration>
					</plugin>
				</plugins>
			</build>
			<dependencies>
				<dependency>
					<groupId>org.jboss.as</groupId>
					<artifactId>jboss-as-arquillian-container-managed</artifactId>
					<scope>test</scope>
				</dependency>
			</dependencies>
		</profile>

		<profile>
			<!-- An optional Arquillian testing profile that executes tests in a remote 
				JBoss EAP instance. Run with: mvn clean test -Parq-jbossas-remote -->
			<id>arq-jbossas-remote</id>
			<build>
				<plugins>
					<plugin>
						<artifactId>maven-surefire-plugin</artifactId>
						<version>${plugin.version.surefire}</version>
						<configuration>
							<skip>false</skip>
						</configuration>
					</plugin>
				</plugins>
			</build>
			<dependencies>
				<dependency>
					<groupId>org.jboss.as</groupId>
					<artifactId>jboss-as-arquillian-container-remote</artifactId>
					<scope>test</scope>
					<version></version>
				</dependency>
			</dependencies>
		</profile>

		<profile>
			<!-- An optional Arquillian testing profile that executes tests in a remote 
				JBoss EAP instance. Run with: mvn clean test -Parq-jbossas-embedded -->
			<id>arq-jbossas-embedded</id>
			<build>
				<plugins>
					<plugin>
						<artifactId>maven-surefire-plugin</artifactId>
						<version>${plugin.version.surefire}</version>
						<configuration>
							<skip>false</skip>
						</configuration>
					</plugin>
				</plugins>
			</build>
			<dependencies>
				<dependency>
					<groupId>org.jboss.as</groupId>
					<artifactId>jboss-as-arquillian-container-embedded</artifactId>
					<scope>test</scope>
				</dependency>
			</dependencies>
		</profile>
	</profiles>

</project>
